# nginx.conf
server {
    listen 80; # Listen on port 80
    server_name localhost;

    root /usr/share/nginx/html;
    index index.html index.htm;

    location / {
        proxy_pass http://front-end:9080; # Forward all traffic to the front-end service
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
    }
}

# Frontend route 
server {
    listen 9080; # Listen on port 9080 for the front-end service
    server_name localhost;

    root /usr/share/nginx/html;
    index index.html index.htm;

    location / {
        try_files $uri $uri/ =404; # Serve static files or return 404
    }
}

# API Proxy
location /api/ {
    proxy_pass http://server:3000/; # Forward API requests to the API service
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection 'upgrade';
    proxy_set_header Host $host;
    proxy_cache_bypass $http_upgrade;
}

# Define a backend group for round-robin load balancing
upstream api_servers {
    server server:3000;
    server server1:3000;
    server server2:3000;
}

proxy_cache_path /tmp/nginx_cache levels=1:2 keys_zone=BOOKS:10m max_size=50m inactive=10m use_temp_path=off;

server {
    listen 80;
    server_name localhost;

    # Frontend caching (static build)
    location / {
        root /usr/share/nginx/html;
        index index.html;
        try_files $uri /index.html;

        # Cache frontend assets
        proxy_cache BOOKS;
        proxy_cache_valid 200 1h;
        proxy_cache_use_stale error timeout updating;
    }

    # API load-balanced route
    location /api/ {
        proxy_pass http://api_servers/;  # forward to the backend group
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_cache_bypass $http_upgrade;
    }

    # Cache specific unfiltered GET routes
    location ~ ^/api/books$ {
        if ($request_method != GET) {
            proxy_pass http://api_servers;
            break;
        }

        proxy_pass http://api_servers;
        proxy_cache BOOKS;
        proxy_cache_valid 200 10m;
        proxy_cache_use_stale error timeout updating;
    }

    location ~ ^/api/books/\d+$ {
        if ($request_method != GET) {
            proxy_pass http://api_servers;
            break;
        }

        proxy_pass http://api_servers;
        proxy_cache BOOKS;
        proxy_cache_valid 200 15m;
        proxy_cache_use_stale error timeout updating;
    }
}
